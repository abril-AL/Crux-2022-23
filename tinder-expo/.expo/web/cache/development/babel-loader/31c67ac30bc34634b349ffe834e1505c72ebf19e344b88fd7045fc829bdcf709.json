{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport CardStack, { Card } from \"react-native-card-stack-swiper\";\nimport { City, Filters, CardItem } from \"../components\";\nimport styles from \"../assets/styles\";\nimport DEMO from \"../assets/data/demo\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Home = function Home() {\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    swiper = _useState2[0],\n    setSwiper = _useState2[1];\n  return _jsx(ImageBackground, {\n    source: require(\"../assets/images/bg.png\"),\n    style: styles.bg,\n    children: _jsxs(View, {\n      style: styles.containerHome,\n      children: [_jsxs(View, {\n        style: styles.top,\n        children: [_jsx(City, {}), _jsx(Filters, {})]\n      }), _jsx(CardStack, {\n        loop: true,\n        verticalSwipe: false,\n        renderNoMoreCards: function renderNoMoreCards() {\n          return null;\n        },\n        ref: function ref(newSwiper) {\n          return setSwiper(newSwiper);\n        },\n        children: DEMO.map(function (item) {\n          return _jsx(Card, {\n            children: _jsx(CardItem, {\n              hasActions: true,\n              image: item.image,\n              name: item.name,\n              description: item.description,\n              matches: item.match\n            })\n          }, item.id);\n        })\n      })]\n    })\n  });\n};\nexport default Home;","map":{"version":3,"names":["React","useState","View","ImageBackground","CardStack","Card","City","Filters","CardItem","styles","DEMO","jsx","_jsx","jsxs","_jsxs","Home","_useState","_useState2","_slicedToArray","swiper","setSwiper","source","require","style","bg","children","containerHome","top","loop","verticalSwipe","renderNoMoreCards","ref","newSwiper","map","item","hasActions","image","name","description","matches","match","id"],"sources":["C:/Users/abril/Desktop/Repos/tinder-expo/screens/Home.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { View, ImageBackground } from \"react-native\";\r\nimport CardStack, { Card } from \"react-native-card-stack-swiper\";\r\nimport { City, Filters, CardItem } from \"../components\";\r\nimport styles from \"../assets/styles\";\r\nimport DEMO from \"../assets/data/demo\";\r\n\r\nconst Home = () => {\r\n  const [swiper, setSwiper] = useState<CardStack | null>(null);\r\n\r\n  return (\r\n    <ImageBackground\r\n      source={require(\"../assets/images/bg.png\")}\r\n      style={styles.bg}\r\n    >\r\n      <View style={styles.containerHome}>\r\n        <View style={styles.top}>\r\n          <City />\r\n          <Filters />\r\n        </View>\r\n\r\n        <CardStack\r\n          loop\r\n          verticalSwipe={false}\r\n          renderNoMoreCards={() => null}\r\n          ref={(newSwiper): void => setSwiper(newSwiper)}\r\n        >\r\n          {DEMO.map((item) => (\r\n            <Card key={item.id}>\r\n              <CardItem\r\n                hasActions\r\n                image={item.image}\r\n                name={item.name}\r\n                description={item.description}\r\n                matches={item.match}\r\n              />\r\n            </Card>\r\n          ))}\r\n        </CardStack>\r\n      </View>\r\n    </ImageBackground>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,eAAA;AAExC,OAAOC,SAAS,IAAIC,IAAI,QAAQ,gCAAgC;AAChE,SAASC,IAAI,EAAEC,OAAO,EAAEC,QAAQ;AAChC,OAAOC,MAAM;AACb,OAAOC,IAAI;AAA4B,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEvC,IAAMC,IAAI,GAAG,SAAPA,IAAIA,CAAA,EAAS;EACjB,IAAAC,SAAA,GAA4Bf,QAAQ,CAAmB,IAAI,CAAC;IAAAgB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAArDG,MAAM,GAAAF,UAAA;IAAEG,SAAS,GAAAH,UAAA;EAExB,OACEL,IAAA,CAACT,eAAe;IACdkB,MAAM,EAAEC,OAAO,2BAA4B;IAC3CC,KAAK,EAAEd,MAAM,CAACe,EAAG;IAAAC,QAAA,EAEjBX,KAAA,CAACZ,IAAI;MAACqB,KAAK,EAAEd,MAAM,CAACiB,aAAc;MAAAD,QAAA,GAChCX,KAAA,CAACZ,IAAI;QAACqB,KAAK,EAAEd,MAAM,CAACkB,GAAI;QAAAF,QAAA,GACtBb,IAAA,CAACN,IAAI,KAAG,EACRM,IAAA,CAACL,OAAO,KAAG;MAAA,EACN,EAEPK,IAAA,CAACR,SAAS;QACRwB,IAAI;QACJC,aAAa,EAAE,KAAM;QACrBC,iBAAiB,EAAE,SAAAA,kBAAA;UAAA,OAAM,IAAI;QAAA,CAAC;QAC9BC,GAAG,EAAE,SAAAA,IAACC,SAAS;UAAA,OAAWZ,SAAS,CAACY,SAAS,CAAC;QAAA,CAAC;QAAAP,QAAA,EAE9Cf,IAAI,CAACuB,GAAG,CAAC,UAACC,IAAI;UAAA,OACbtB,IAAA,CAACP,IAAI;YAAAoB,QAAA,EACHb,IAAA,CAACJ,QAAQ;cACP2B,UAAU;cACVC,KAAK,EAAEF,IAAI,CAACE,KAAM;cAClBC,IAAI,EAAEH,IAAI,CAACG,IAAK;cAChBC,WAAW,EAAEJ,IAAI,CAACI,WAAY;cAC9BC,OAAO,EAAEL,IAAI,CAACM;YAAM;UACpB,GAPON,IAAI,CAACO,EAAE,CAQX;QAAA,CACR;MAAC,EACQ;IAAA;EACP,EACS;AAEtB,CAAC;AAED,eAAe1B,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}